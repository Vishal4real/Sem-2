Q1

public class KnapsackDP {

    static int knapsack(int W, int[] wt, int[] val, int n) {
        int[][] dp = new int[n + 1][W + 1];

        for (int i = 0; i <= n; i++) {
            for (int w = 0; w <= W; w++) {
                if (i == 0 || w == 0) {
                    dp[i][w] = 0; // Base case: no items or no capacity
                } else if (wt[i - 1] <= w) {
                    dp[i][w] = Math.max(val[i - 1] + dp[i - 1][w - wt[i - 1]], dp[i - 1][w]);
                } else {
                    dp[i][w] = dp[i - 1][w];
                }
            }
        }

        return dp[n][W];
    }

    public static void main(String[] args) {
        int[] val = {60, 100, 120};
        int[] wt = {10, 20, 30};
        int W = 50; // Knapsack capacity
        int n = val.length;

        int maxValue = knapsack(W, wt, val, n);
        System.out.println("Maximum value that can be obtained: " + maxValue);
    }
}

Q2.

import java.util.*;

public class HamiltonianCycle {

    static boolean isHamiltonianCycle(int[][] graph) {
        int V = graph.length;
        int[] path = new int[V];
        Arrays.fill(path, -1);
        path[0] = 0;

        return hamiltonianCycleUtil(graph, path, 1);
    }

    static boolean hamiltonianCycleUtil(int[][] graph, int[] path, int pos) {
        int V = graph.length;
        if (pos == V) {
            return graph[path[pos - 1]][path[0]] == 1;
        }

        for (int v = 1; v < V; v++) {
            if (isSafe(v, graph, path, pos)) {
                path[pos] = v;

                if (hamiltonianCycleUtil(graph, path, pos + 1)) {
                    return true;
                }

                path[pos] = -1;
            }
        }

        return false;
    }

    static boolean isSafe(int v, int[][] graph, int[] path, int pos) {
        if (graph[path[pos - 1]][v] == 0) {
            return false;
        }

        for (int i = 0; i < pos; i++) {
            if (path[i] == v) {
                return false;
            }
        }

        return true;
    }

    public static void main(String[] args) {
        int[][] graph = {
            {0, 1, 0, 1, 0},
            {1, 0, 1, 1, 1},
            {0, 1, 0, 0, 1},
            {1, 1, 0, 0, 1},
            {0, 1, 1, 1, 0}
        };

        if (isHamiltonianCycle(graph)) {
            System.out.println("The given graph is a Hamiltonian cycle.");
        } else {
            System.out.println("The given graph is not a Hamiltonian cycle.");
        }
    }
}
