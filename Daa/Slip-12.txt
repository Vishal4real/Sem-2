Q1

import java.util.*;

public class BreadthFirstSearch {

    static class Graph {
        private int V;
        private LinkedList<Integer>[] adjList;

        Graph(int V) {
            this.V = V;
            adjList = new LinkedList[V];
            for (int i = 0; i < V; i++) {
                adjList[i] = new LinkedList<>();
            }
        }

        void addEdge(int u, int v) {
            adjList[u].add(v);
        }

        void BFS(int start) {
            boolean[] visited = new boolean[V];
            LinkedList<Integer> queue = new LinkedList<>();
            visited[start] = true;
            queue.add(start);

            while (!queue.isEmpty()) {
                start = queue.poll();
                System.out.print(start + " ");

                for (int neighbor : adjList[start]) {
                    if (!visited[neighbor]) {
                        visited[neighbor] = true;
                        queue.add(neighbor);
                    }
                }
            }
        }
    }

    public static void main(String[] args) {
        int V = 6; // Number of vertices
        Graph graph = new Graph(V);
        graph.addEdge(0, 1);
        graph.addEdge(0, 2);
        graph.addEdge(1, 3);
        graph.addEdge(1, 4);
        graph.addEdge(2, 4);
        graph.addEdge(3, 4);
        graph.addEdge(3, 5);
        graph.addEdge(4, 5);

        long startTime = System.nanoTime(); // Start time

        for (int i = 0; i < V; i++) {
            graph.BFS(i);
        }

        long endTime = System.nanoTime(); // End time
        long duration = (endTime - startTime) / 1000; // Duration in microseconds

        System.out.println("\nTime taken for BFS: " + duration + " microseconds");
    }
}


Q2
import java.util.*;
public class Selection {   
    public static void selectionSort(int[] arr) {
        int n = arr.length;
        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (arr[j] < arr[minIndex]) {
                    minIndex = j;
                }
            }
            int temp = arr[minIndex];
            arr[minIndex] = arr[i];
            arr[i] = temp;
        }
    }
    
    public static void main(String[] args) {
        int[] arr = {1,3,4,2,6,5};
        int n = arr.length;
        
        long startTime = System.nanoTime();
        selectionSort(arr);
        long endTime = System.nanoTime();
        long timeElapsed = endTime - startTime;
        
        System.out.println("Sorted array:");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println("\nTime taken: " + timeElapsed + " nanoseconds");
    }
}